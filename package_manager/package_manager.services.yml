services:
  _defaults:
    autowire: true

  # Underlying Symfony utilities for Composer Stager.
  Symfony\Component\Filesystem\Filesystem:
    public: false
  Symfony\Component\Process\ExecutableFinder:
    public: false

  # Basic infrastructure services for Composer Stager, overridden by us to
  # provide additional functionality.
  Drupal\package_manager\ProcessFactory:
    public: false
  Drupal\package_manager\ExecutableFinder:
    public: false
  Drupal\package_manager\FileSyncerFactory:
    public: false
  PhpTuf\ComposerStager\Infrastructure\Service\Finder\ExecutableFinderInterface:
    alias: 'Drupal\package_manager\ExecutableFinder'
  PhpTuf\ComposerStager\Infrastructure\Factory\Process\ProcessFactoryInterface:
    alias: 'Drupal\package_manager\ProcessFactory'
  PhpTuf\ComposerStager\Domain\Service\FileSyncer\FileSyncerInterface:
    factory: ['@Drupal\package_manager\FileSyncerFactory', 'create']
  logger.channel.package_manager:
    parent: logger.channel_base
    arguments:
      - 'package_manager'

  # Services provided to Drupal by Package Manager.
  package_manager.beginner:
    class: PhpTuf\ComposerStager\Domain\Core\Beginner\Beginner
  PhpTuf\ComposerStager\Domain\Core\Beginner\BeginnerInterface: '@package_manager.beginner'
  package_manager.stager:
    class: PhpTuf\ComposerStager\Domain\Core\Stager\Stager
  PhpTuf\ComposerStager\Domain\Core\Stager\StagerInterface: '@package_manager.stager'
  package_manager.committer:
    class: PhpTuf\ComposerStager\Domain\Core\Committer\Committer
  PhpTuf\ComposerStager\Domain\Core\Committer\CommitterInterface: '@package_manager.committer'
  package_manager.path_locator:
    class: Drupal\package_manager\PathLocator
    arguments:
      $appRoot: '%app.root%'
  Drupal\package_manager\PathLocator: '@package_manager.path_locator'
  package_manager.failure_marker:
    class: Drupal\package_manager\FailureMarker
  Drupal\package_manager\FailureMarker: '@package_manager.failure_marker'
  package_manager.update_data_subscriber:
    class: Drupal\package_manager\EventSubscriber\UpdateDataSubscriber
    arguments:
      - '@update.manager'
    # @todo Autowire this service when https://drupal.org/i/3325557 lands.
    autowire: false
    tags:
      - { name: event_subscriber }
  package_manager.composer_inspector:
    class: Drupal\package_manager\ComposerInspector
    calls:
      - [setLogger, ['@logger.channel.package_manager']]
  Drupal\package_manager\ComposerInspector: '@package_manager.composer_inspector'

  # Validators.
  package_manager.validator.environment_support:
    class: Drupal\package_manager\Validator\EnvironmentSupportValidator
    tags:
      - { name: event_subscriber }
  Drupal\package_manager\Validator\EnvironmentSupportValidator: '@package_manager.validator.environment_support'
  package_manager.validator.composer:
    class: Drupal\package_manager\Validator\ComposerValidator
    tags:
      - { name: event_subscriber }
  package_manager.validator.disk_space:
    class: Drupal\package_manager\Validator\DiskSpaceValidator
    tags:
      - { name: event_subscriber }
  Drupal\package_manager\Validator\DiskSpaceValidator: '@package_manager.validator.disk_space'
  package_manager.validator.pending_updates:
    class: Drupal\package_manager\Validator\PendingUpdatesValidator
    arguments:
      - '%app.root%'
      - '@update.post_update_registry'
    # @todo Autowire this service when https://drupal.org/i/3325557 lands.
    autowire: false
    tags:
      - { name: event_subscriber }
  package_manager.validator.lock_file:
    class: Drupal\package_manager\Validator\LockFileValidator
    tags:
      - { name: event_subscriber }
  package_manager.validator.file_system:
    class: Drupal\package_manager\Validator\WritableFileSystemValidator
    tags:
      - { name: event_subscriber }
  Drupal\package_manager\Validator\WritableFileSystemValidator: '@package_manager.validator.file_system'
  package_manger.validator.composer_minimum_stability:
    class: Drupal\package_manager\Validator\ComposerMinimumStabilityValidator
    tags:
      - { name: event_subscriber }
  package_manager.validator.multisite:
    class: Drupal\package_manager\Validator\MultisiteValidator
    tags:
      - { name: event_subscriber }
  package_manager.validator.symlink:
    class: Drupal\package_manager\Validator\SymlinkValidator
    tags:
      - { name: event_subscriber }
  package_manager.validator.duplicate_info_file:
    class: Drupal\package_manager\Validator\DuplicateInfoFileValidator
    tags:
      - { name: event_subscriber }
  package_manager.validator.enabled_extensions:
    class: Drupal\package_manager\Validator\EnabledExtensionsValidator
    tags:
      - { name: event_subscriber }
  package_manager.validator.overwrite_existing_packages:
    class: Drupal\package_manager\Validator\OverwriteExistingPackagesValidator
    tags:
      - { name: event_subscriber }
  package_manager.validator.allowed_scaffold_packages:
    class: Drupal\package_manager\Validator\AllowedScaffoldPackagesValidator
    tags:
      - { name: event_subscriber }
  package_manager.validator.staged_database_updates:
    class: Drupal\package_manager\Validator\StagedDBUpdateValidator
    tags:
      - { name: event_subscriber }
  Drupal\package_manager\Validator\StagedDBUpdateValidator: '@package_manager.validator.staged_database_updates'
  package_manager.test_site_excluder:
    class: Drupal\package_manager\PathExcluder\TestSiteExcluder
    tags:
      - { name: event_subscriber }
  package_manager.vendor_hardening_excluder:
    class: Drupal\package_manager\PathExcluder\VendorHardeningExcluder
    tags:
      - { name: event_subscriber }
  package_manager.site_files_excluder:
    class: Drupal\package_manager\PathExcluder\SiteFilesExcluder
    tags:
      - { name: event_subscriber }
  package_manager.sqlite_excluder:
    class: Drupal\package_manager\PathExcluder\SqliteDatabaseExcluder
    tags:
      - { name: event_subscriber }
  Drupal\package_manager\PathExcluder\SqliteDatabaseExcluder: '@package_manager.sqlite_excluder'
  package_manager.git_excluder:
    class: Drupal\package_manager\PathExcluder\GitExcluder
    tags:
      - { name: event_subscriber }
  package_manager.unknown_path_excluder:
    class: Drupal\package_manager\PathExcluder\UnknownPathExcluder
    tags:
      - { name: event_subscriber }
  package_manager.site_configuration_excluder:
    class: Drupal\package_manager\PathExcluder\SiteConfigurationExcluder
    arguments:
      $sitePath: '%site.path%'
    tags:
      - { name: event_subscriber }
  Drupal\package_manager\PathExcluder\SiteConfigurationExcluder: '@package_manager.site_configuration_excluder'
  package_manager.node_modules_excluder:
    class: Drupal\package_manager\PathExcluder\NodeModulesExcluder
    tags:
      - { name: event_subscriber }
  package_manager.uninstall_validator:
    class: Drupal\package_manager\PackageManagerUninstallValidator
    tags:
      - { name: module_install.uninstall_validator }
    parent: container.trait
    calls:
      - ['setContainer', ['@service_container']]
    lazy: true
  package_manager.validator.settings:
    class: Drupal\package_manager\Validator\SettingsValidator
    tags:
      - { name: event_subscriber }
  Drupal\package_manager\Validator\RsyncValidator:
    tags:
      - { name: event_subscriber }
  package_manager.validator.composer_plugins:
    class: Drupal\package_manager\Validator\ComposerPluginsValidator
    tags:
      - { name: event_subscriber }
  package_manager.validator.patches:
    class: Drupal\package_manager\Validator\ComposerPatchesValidator
    tags:
      - { name: event_subscriber }
  package_manager.validator.base_requirements_fulfilled:
    class: Drupal\package_manager\Validator\BaseRequirementsFulfilledValidator
    tags:
      - { name: event_subscriber }
  Drupal\package_manager\Validator\BaseRequirementsFulfilledValidator: '@package_manager.validator.base_requirements_fulfilled'
  package_manager.validator.supported_releases:
    class: Drupal\package_manager\Validator\SupportedReleaseValidator
    tags:
      - { name: event_subscriber }
  package_manager.validator.stage_not_in_active:
    class: Drupal\package_manager\Validator\StageNotInActiveValidator
    tags:
      - { name: event_subscriber }
  package_manager.validator.php_extensions:
    class: Drupal\package_manager\Validator\PhpExtensionsValidator
    tags:
      - { name: event_subscriber }
  # @todo Tag this service as an event subscriber in https://drupal.org/i/3358504,
  #   once packages.drupal.org supports TUF.
  Drupal\package_manager\Validator\PhpTufValidator: {}
  package_manager.update_processor:
    class: Drupal\package_manager\PackageManagerUpdateProcessor
    arguments:
      # @todo Autowire $update_fetcher when https://drupal.org/i/3325557 lands.
      $update_fetcher: '@update.fetcher'
      $key_value_factory: '@keyvalue'
      $key_value_expirable_factory: '@keyvalue.expirable'
